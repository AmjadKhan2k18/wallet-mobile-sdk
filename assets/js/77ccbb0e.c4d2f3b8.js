"use strict";(self.webpackChunkmobile_wallet_protocol=self.webpackChunkmobile_wallet_protocol||[]).push([[183],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1719:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={title:"Overview",slug:"spec"},l="Overview",i={unversionedId:"spec-overview",id:"spec-overview",title:"Overview",description:"Mobile Wallet Protocol",source:"@site/docs/spec-overview.md",sourceDirName:".",slug:"/spec",permalink:"/wallet-mobile-sdk/docs/spec",draft:!1,tags:[],version:"current",frontMatter:{title:"Overview",slug:"spec"},sidebar:"spec",next:{title:"Messages",permalink:"/wallet-mobile-sdk/docs/spec/messages"}},c={},s=[{value:"Mobile Wallet Protocol",id:"mobile-wallet-protocol",level:2}],p={toc:s};function u(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"overview"},"Overview"),(0,o.kt)("h2",{id:"mobile-wallet-protocol"},"Mobile Wallet Protocol"),(0,o.kt)("p",null,(0,o.kt)("img",{src:r(2894).Z,width:"1526",height:"698"})),(0,o.kt)("p",null,"MWP is a protocol to allow mobile web3 apps to interact with wallet apps and access users' web3 accounts.\nIt creates a direct channel between client and wallet apps, removing the need for an intermediary bridge or relay server. "),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Simple: The messages sent by the client app are called requests and the ones returned by the wallet host are called responses."),(0,o.kt)("li",{parentName:"ul"},"Direct: The protocol uses deep links as its transport layer to let participating apps deliver messages directly to their peer without external entities such as a bridge server."),(0,o.kt)("li",{parentName:"ul"},"Secure: It provides an encrypted P2P communication channel between client and server (wallet host) to exchange discrete stateless messages."),(0,o.kt)("li",{parentName:"ul"},"Efficient: Reduces the number of hops between client applications and wallet via support for batch requests."),(0,o.kt)("li",{parentName:"ul"},"Decentralized and reliable: It defines a decentralized verification procedure to check authenticity of each other using well-known URI standard for univeral link without a centralized registry.")))}u.isMDXComponent=!0},2894:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/overview-252358cd54d3e5e8945f7a2810e4b10c.png"}}]);