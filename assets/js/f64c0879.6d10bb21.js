"use strict";(self.webpackChunkmobile_wallet_protocol=self.webpackChunkmobile_wallet_protocol||[]).push([[765],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),l=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),b=i,h=p["".concat(s,".").concat(b)]||p[b]||d[b]||r;return t?a.createElement(h,o(o({ref:n},u),{},{components:t})):a.createElement(h,o({ref:n},u))}));function b(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<r;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3785:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var a=t(7462),i=(t(7294),t(3905));const r={title:"Establishing a connection",slug:"android-establishing-a-connection",category:"633d1d37bc7103008654c123"},o=void 0,c={unversionedId:"client-sdk/android-establishing-a-connection",id:"client-sdk/android-establishing-a-connection",title:"Establishing a connection",description:"A connection to Coinbase Wallet can be initiated by calling the initiateHandshake function provided by the SDK. The function also takes in an optional initialActions parameter which apps can use to take certain actions along with the initial handshake request.",source:"@site/docs/client-sdk/android-establishing-a-connection.md",sourceDirName:"client-sdk",slug:"/client-sdk/android-establishing-a-connection",permalink:"/wallet-mobile-sdk/docs/client-sdk/android-establishing-a-connection",draft:!1,tags:[],version:"current",frontMatter:{title:"Establishing a connection",slug:"android-establishing-a-connection",category:"633d1d37bc7103008654c123"},sidebar:"tutorialSidebar",previous:{title:"API Reference",permalink:"/wallet-mobile-sdk/docs/client-sdk/android-api-reference"},next:{title:"Install",permalink:"/wallet-mobile-sdk/docs/client-sdk/android-install"}},s={},l=[],u={toc:l};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A connection to Coinbase Wallet can be initiated by calling the ",(0,i.kt)("inlineCode",{parentName:"p"},"initiateHandshake")," function provided by the SDK. The function also takes in an optional ",(0,i.kt)("inlineCode",{parentName:"p"},"initialActions")," parameter which apps can use to take certain actions along with the initial handshake request."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"Kotlin",Kotlin:!0},'val requestAccount = Web3JsonRPC.RequestAccounts().action()\nval handShakeActions = listOf(requestAccount)\n\nclient.initiateHandshake(\n   initialActions = handShakeActions\n) { result: Result<List<ActionResult>>, account: Account? ->\n    result.onSuccess { actionResults: List<ActionResult> ->\n        actionResults.handleSuccess("Handshake", handShakeActions, account)\n    }\n    result.onFailure { err ->\n        err.handleError("HandShake")\n    }\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java",metastring:"Java",Java:!0},"// requestAccounts request\nArrayList<Action> actions = new ArrayList<>();\nactions.add(\n   new Web3JsonRPC.RequestAccounts().action(false)\n);\n\n// Initiate handshake\nclient.initiateHandshake(\n   actions,\n   (results, account) -> {\n      for (ActionResult result : results) {\n         if (result instanceof ActionResult.Result) {\n            ((ActionResult.Result) result).getValue();\n         }\n\n         if (result instanceof ActionResult.Error) {\n            ((ActionResult.Error) result).getCode();\n            ((ActionResult.Error) result).getMessage();\n         }\n      }\n   },\n   error -> {\n   }\n);\n")),(0,i.kt)("p",null,"An example handshake request is provided in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/coinbase/wallet-mobile-sdk/blob/master/android/example/src/main/java/com/coinbase/android/beta/MainActivity.kt#L52"},"sample application"),"."))}d.isMDXComponent=!0}}]);